<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Frolian's blog</title><link href="http://flothesof.github.io/" rel="alternate"></link><link href="http://flothesof.github.io/feeds/python.atom.xml" rel="self"></link><id>http://flothesof.github.io/</id><updated>2015-02-27T08:47:00+01:00</updated><entry><title>Animating an ancient Japanese wave pattern</title><link href="http://flothesof.github.io/Japanese-wave-pattern.html" rel="alternate"></link><updated>2015-02-27T08:47:00+01:00</updated><author><name>Florian Le Bourdais</name></author><id>tag:flothesof.github.io,2015-02-27:Japanese-wave-pattern.html</id><summary type="html">&lt;p&gt;In this post, we delve into graphical art based on an ancient Japanese wave pattern.&lt;/p&gt;</summary><category term="Waves"></category><category term="Physics"></category><category term="Animations"></category></entry><entry><title>A quantitative analysis of XKCD comic #314</title><link href="http://flothesof.github.io/xkcd-dating-pools.html" rel="alternate"></link><updated>2015-01-31T12:05:00+01:00</updated><author><name>Florian Le Bourdais</name></author><id>tag:flothesof.github.io,2015-01-31:xkcd-dating-pools.html</id><summary type="html">&lt;p&gt;Do you know XKCD? Have you ever wondered if comic #314 was actually accurate? In this post, I’ll present my analysis of this comic and show that it is indeed possible to obtain dating pool curves similar to the ones shown in the comic using Census Bureau data.&lt;/p&gt;</summary><category term="Statistics"></category><category term="XKCD"></category></entry><entry><title>Smile Recognition Using OpenCV and scikit-learn</title><link href="http://flothesof.github.io/smile-recognition.html" rel="alternate"></link><updated>2015-01-07T23:50:00+01:00</updated><author><name>Florian Le Bourdais</name></author><id>tag:flothesof.github.io,2015-01-07:smile-recognition.html</id><summary type="html">&lt;p&gt;In this post, we’re using a little of machine learning, some IPython notebook interaction and OpenCV to determine if a face found in the webcam’s frame is smiling or not.&lt;/p&gt;</summary><category term="Machine Learning"></category><category term="OpenCV"></category></entry><entry><title>A 3D model of the Paris area using the Google elevation API and OpenSCAD</title><link href="http://flothesof.github.io/Paris-3D-model-using-elevation-API-and-OpenSCAD.html" rel="alternate"></link><updated>2014-10-30T13:11:00+01:00</updated><author><name>Florian Le Bourdais</name></author><id>tag:flothesof.github.io,2014-10-30:Paris-3D-model-using-elevation-API-and-OpenSCAD.html</id><summary type="html">&lt;p&gt;In this post we use the elevation API provided by Google to obtain some height information about the Paris area and build a 3D model from the data using the OpenSCAD language. The result can be brought to the physical world using a 3D printer.&lt;/p&gt;</summary><category term="Geography"></category><category term="3D Printing"></category></entry><entry><title>Building graphs with Japanese vocabulary and kanji</title><link href="http://flothesof.github.io/Japanese-kanji-vocab-graphs.html" rel="alternate"></link><updated>2014-10-20T09:53:00+02:00</updated><author><name>Florian Le Bourdais</name></author><id>tag:flothesof.github.io,2014-10-20:Japanese-kanji-vocab-graphs.html</id><summary type="html">&lt;p&gt;This post visualizes the relationship between kanji and vocabulary data from my Japanese language learning deck using graphs.&lt;/p&gt;</summary><category term="Japanese"></category></entry><entry><title>The seven modes of Tetris</title><link href="http://flothesof.github.io/the-seven-modes-of-Tetris.html" rel="alternate"></link><updated>2014-09-17T23:55:00+02:00</updated><author><name>Florian Le Bourdais</name></author><id>tag:flothesof.github.io,2014-09-17:the-seven-modes-of-Tetris.html</id><summary type="html">&lt;p&gt;You'll never listen to Tetris in the same way again after hearing our seven church modes rendition with a Game Boy and a bowl sound.&lt;/p&gt;</summary><category term="Sound"></category><category term="Game Boy"></category></entry><entry><title>Variations on the Samsung whistle ringtone</title><link href="http://flothesof.github.io/fun-with-the-Samsung-whistle-ringtone.html" rel="alternate"></link><updated>2014-09-15T16:01:00+02:00</updated><author><name>Florian Le Bourdais</name></author><id>tag:flothesof.github.io,2014-09-15:fun-with-the-Samsung-whistle-ringtone.html</id><summary type="html">&lt;p&gt;What would you do in Korea where everyone uses the same Samsung ringtone on their smartphone if you wanted to stand out and be original? I say: butcher it, chop it to pieces and make a nice new sound out of it.&lt;/p&gt;</summary><category term="Sound"></category><category term="Music"></category></entry><entry><title>How to create a Game Boy sound in Python?</title><link href="http://flothesof.github.io/gameboy-sounds-in-python.html" rel="alternate"></link><updated>2014-09-14T09:28:00+02:00</updated><author><name>Florian Le Bourdais</name></author><id>tag:flothesof.github.io,2014-09-14:gameboy-sounds-in-python.html</id><summary type="html">&lt;p&gt;We examine hardware specs of the old school Game Boy and find ourselves enjoying 8 bit music with Python.&lt;/p&gt;</summary><category term="Gaming"></category><category term="Sound"></category><category term="Music"></category></entry><entry><title>A little fun with stacking bricks</title><link href="http://flothesof.github.io/fun-with-stacking-bricks.html" rel="alternate"></link><updated>2014-09-01T16:00:00+02:00</updated><author><name>Florian Le Bourdais</name></author><id>tag:flothesof.github.io,2014-09-01:fun-with-stacking-bricks.html</id><summary type="html">&lt;p&gt;A fun summer project in which we learn how to stack bricks Jenga style.&lt;/p&gt;</summary><category term="Bricks"></category><category term="Buildings"></category><category term="Physics"></category></entry><entry><title>Modelling the game of poker</title><link href="http://flothesof.github.io/poker-odds-in-Las-Vegas.html" rel="alternate"></link><updated>2014-07-28T16:38:00+02:00</updated><author><name>Florian Le Bourdais</name></author><id>tag:flothesof.github.io,2014-07-28:poker-odds-in-Las-Vegas.html</id><summary type="html">&lt;p&gt;Being in Las Vegas, it's difficult to think about poker and not ask yourself "How does it really work? What are the odds of winning with a given hand?". Therefore, this post is devoted to an attempt at implementing a poker simulation.&lt;/p&gt;</summary><category term="Mathematics"></category><category term="Gambling"></category></entry><entry><title>Generating a gallery of clothes while using interactive IPython notebook tools</title><link href="http://flothesof.github.io/an-interactive-gallery-of-clothes.html" rel="alternate"></link><updated>2014-07-02T15:12:00+02:00</updated><author><name>Florian Le Bourdais</name></author><id>tag:flothesof.github.io,2014-07-02:an-interactive-gallery-of-clothes.html</id><summary type="html">&lt;p&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;
&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;
&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;This post is dedicated to a small clothing experiment. With the help of Google, I've downloaded images of pants and t-shirts (or shirts) from the internet. Using Python and matplotlib, I will generate and display random pairings from these images.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;
&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;
&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;First, let's load the data I've saved ...&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/p&gt;</summary><category term="Clothes"></category><category term="Real life"></category></entry><entry><title>Exploring Finnish words using the interactive IPython HTML widgets</title><link href="http://flothesof.github.io/exploring-Finnish-words-with-IPython.html" rel="alternate"></link><updated>2014-06-17T15:12:00+02:00</updated><author><name>Florian Le Bourdais</name></author><id>tag:flothesof.github.io,2014-06-17:exploring-Finnish-words-with-IPython.html</id><summary type="html">&lt;p&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;
&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;
&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;In this post, we're gonna take a look at the Finnish language. Our starting point is a file found &lt;a href="http://www.csc.fi/english/research/sciences/linguistics/taajuussanasto-B9996/view"&gt;here&lt;/a&gt;, which contains the 10000 most common words found in Finnish.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;
&lt;div class="prompt input_prompt"&gt;
In&amp;nbsp;[37]:
&lt;/div&gt;
&lt;div class="inner_cell"&gt;
    &lt;div class="input_area"&gt;
&lt;div class="highlight-ipynb"&gt;&lt;pre class="ipynb"&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;urllib2&lt;/span&gt;
&lt;span class="n"&gt;response&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;urllib2&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;urlopen&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;http://www.csc.fi/english/research/sciences/linguistics/taajuussanasto-B9996/download&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;words&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;response ...&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/p&gt;</summary><category term="Languages"></category></entry><entry><title>A Wave Reflecting On A Boundary</title><link href="http://flothesof.github.io/wave-boundary-reflection.html" rel="alternate"></link><updated>2014-06-02T15:12:00+02:00</updated><author><name>Florian Le Bourdais</name></author><id>tag:flothesof.github.io,2014-06-02:wave-boundary-reflection.html</id><summary type="html">&lt;p&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;
&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;
&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;An incident wave&lt;/p&gt;
&lt;p&gt;&lt;span class="math"&gt;\[ u_I(x, t) = F_I(t - x/c) \]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;arrives perpendicularly at a boundary separating two media gives rise to a reflected wave&lt;/p&gt;
&lt;p&gt;&lt;span class="math"&gt;\[ u_R(x, t) = F_R(t + x/c) \]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;Writing that the disturbance is zero at the boundary (which we set on the origin) we obtain the following ...&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/p&gt;</summary><category term="Waves"></category><category term="Physics"></category></entry><entry><title>The Mandelbrot fractal</title><link href="http://flothesof.github.io/Mandelbrot-fractal.html" rel="alternate"></link><updated>2014-04-17T15:12:00+02:00</updated><author><name>Florian Le Bourdais</name></author><id>tag:flothesof.github.io,2014-04-17:Mandelbrot-fractal.html</id><summary type="html">&lt;p&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;
&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;
&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;The Mandelbrot fractal is a well known mathematical object, foremost for its beauty. You can read about it in &lt;a href="http://en.wikipedia.org/wiki/Mandelbrot_set"&gt;Wikipedia&lt;/a&gt; or try a related &lt;a href="https://www.google.fr/search?q=mandelbrot+fractal&amp;amp;tbm=isch&amp;amp;tbo=u&amp;amp;source=univ&amp;amp;sa=X&amp;amp;ei=eCPGU_7UKMOo0QWMhYDQBA&amp;amp;ved=0CC0QsAQ"&gt;Google image search&lt;/a&gt;. There even are &lt;a href="http://www.youtube.com/watch?v=0jGaio87u3A"&gt;hypnotic videos made about it&lt;/a&gt; on YouTube.&lt;/p&gt;
&lt;p&gt;Anyhow, in this post, we're going to explore how to draw it ...&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/p&gt;</summary><category term="Fractals"></category><category term="Math"></category></entry><entry><title>Implementing the 2048 game</title><link href="http://flothesof.github.io/2048-game.html" rel="alternate"></link><updated>2014-03-25T15:12:00+01:00</updated><author><name>Florian Le Bourdais</name></author><id>tag:flothesof.github.io,2014-03-25:2048-game.html</id><summary type="html">&lt;p&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;
&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;
&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h1 id="Outline-of-post"&gt;Outline of post&lt;a class="anchor-link" href="#Outline-of-post"&gt;&amp;#182;&lt;/a&gt;&lt;/h1&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div class="cell border-box-sizing text_cell rendered"&gt;
&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;
&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;Let's try to implement the 2048 game in Python, based on my experience playing it as well as the &lt;a href=""&gt;sources&lt;/a&gt;. We'll do this with a class, that will have the following methods :&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;an &lt;code&gt;__init__&lt;/code&gt; method that will initialize a board with two numbers&lt;/li&gt;
&lt;li&gt;a &lt;code&gt;move ...&lt;/code&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/p&gt;</summary><category term="Gaming"></category></entry><entry><title>Generating synthetic guitar sounds with the Karplus Strong algorithm</title><link href="http://flothesof.github.io/Karplus-Strong-python.html" rel="alternate"></link><updated>2014-03-03T15:12:00+01:00</updated><author><name>Florian Le Bourdais</name></author><id>tag:flothesof.github.io,2014-03-03:Karplus-Strong-python.html</id><summary type="html">&lt;p&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;
&lt;div class="prompt input_prompt"&gt;
In&amp;nbsp;[1]:
&lt;/div&gt;
&lt;div class="inner_cell"&gt;
    &lt;div class="input_area"&gt;
&lt;div class="highlight-ipynb"&gt;&lt;pre class="ipynb"&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;StringIO&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;base64&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;struct&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;IPython.core.display&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;HTML&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;wavPlayer&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;rate&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot; will display html 5 player for compatible browser&lt;/span&gt;
&lt;span class="sd"&gt;    The browser need to know how to play wav through html5.&lt;/span&gt;
&lt;span class="sd"&gt;    there is no autoplay to prevent file playing when the browser opens&lt;/span&gt;
&lt;span class="sd"&gt;    Adapted ...&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/p&gt;</summary><category term="Gaming"></category></entry><entry><title>Trajectories in the French department landscape</title><link href="http://flothesof.github.io/French-department-trajectories.html" rel="alternate"></link><updated>2014-02-22T07:47:00+01:00</updated><author><name>Florian Le Bourdais</name></author><id>tag:flothesof.github.io,2014-02-22:French-department-trajectories.html</id><summary type="html">&lt;p&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;
&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;
&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;First, let's load a list of the French departments.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;
&lt;div class="prompt input_prompt"&gt;
In&amp;nbsp;[1]:
&lt;/div&gt;
&lt;div class="inner_cell"&gt;
    &lt;div class="input_area"&gt;
&lt;div class="highlight-ipynb"&gt;&lt;pre class="ipynb"&gt;&lt;span class="n"&gt;src&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;u&amp;quot;&amp;quot;&amp;quot;01	Ain	Bourg-en-Bresse	Rhône-Alpes&lt;/span&gt;
&lt;span class="s"&gt;02	Aisne	Laon	Picardie&lt;/span&gt;
&lt;span class="s"&gt;03	Allier	Moulins	Auvergne&lt;/span&gt;
&lt;span class="s"&gt;04	Alpes de Hautes-Provence	Digne	Provence-Alpes-Côte d&amp;#39;Azur&lt;/span&gt;
&lt;span class="s"&gt;05	Hautes-Alpes	Gap	Provence-Alpes-Côte d&amp;#39;Azur&lt;/span&gt;
&lt;span class="s"&gt;06	Alpes-Maritimes	Nice	Provence-Alpes-Côte d&amp;#39;Azur&lt;/span&gt;
&lt;span class="s"&gt;07	Ardèche	Privas	Rhône-Alpes ...&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/p&gt;</summary><category term="Geography"></category></entry><entry><title>The Fourier series of a rectangle function</title><link href="http://flothesof.github.io/Fourier-series-rectangle.html" rel="alternate"></link><updated>2014-02-20T17:15:00+01:00</updated><author><name>Florian Le Bourdais</name></author><id>tag:flothesof.github.io,2014-02-20:Fourier-series-rectangle.html</id><summary type="html">&lt;p&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;
&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;
&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;Today, we're going to play with a couple of sine functions. We're interested in functions of the form &lt;span class="math"&gt;\(f_n(x) = sin(2\pi \, n \, x)\)&lt;/span&gt;. Let's plot that function on the interval &lt;span class="math"&gt;\([0; 1]\)&lt;/span&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;
&lt;div class="prompt input_prompt"&gt;
In&amp;nbsp;[1]:
&lt;/div&gt;
&lt;div class="inner_cell"&gt;
    &lt;div class="input_area"&gt;
&lt;div class="highlight-ipynb"&gt;&lt;pre class="ipynb"&gt;&lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="k"&gt;pylab&lt;/span&gt; &lt;span class="n"&gt;inline&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div class="output_wrapper"&gt;
&lt;div class="output"&gt;


&lt;div class="output_area"&gt;&lt;div class="prompt"&gt;&lt;/div&gt;
&lt;div class="output_subarea output_stream output_stdout output_text"&gt;
&lt;pre&gt;
Populating the interactive namespace from numpy and matplotlib

&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;
&lt;div class="prompt input_prompt"&gt;
In ...&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/p&gt;</summary><category term="Mathematics"></category></entry><entry><title>Analyzing verb endings in the Japanese language</title><link href="http://flothesof.github.io/verb-endings-Japanese.html" rel="alternate"></link><updated>2013-11-23T00:15:00+01:00</updated><author><name>Florian Le Bourdais</name></author><id>tag:flothesof.github.io,2013-11-23:verb-endings-Japanese.html</id><summary type="html">&lt;p&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;
&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;
&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h1 id="goal-of-this-study"&gt;Goal of this study&lt;/h1&gt;
&lt;p&gt;According to Tae Kim's guide to Japanese grammar and &lt;a href="http://www.guidetojapanese.org/learn/grammar/verbs"&gt;its introduction to Japanese verbs&lt;/a&gt;, the following holds true:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;All ru-verbs end in 「る」 while u-verbs can end in a number of u-vowel sounds including 「る」. Therefore, if a verb does not end in 「る」, it ...&lt;/p&gt;&lt;/blockquote&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/p&gt;</summary><category term="Japanese"></category></entry><entry><title>Creating a shortcut to the IPython Notebook server in the Windows 7 file explorer</title><link href="http://flothesof.github.io/IPythonNotebook-shortcut-Windows7-explorer.html" rel="alternate"></link><updated>2013-11-22T14:12:00+01:00</updated><author><name>Florian Le Bourdais</name></author><id>tag:flothesof.github.io,2013-11-22:IPythonNotebook-shortcut-Windows7-explorer.html</id><summary type="html">&lt;p&gt;These days I tend to use the IPython Notebook with pretty much every computational project that I use. At work, I'm using Windows 7. By default, it is quite cumbersome to launch an IPython Notebook in Windows 7. The steps are as follows:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Navigate to the directory I want ...&lt;/li&gt;&lt;/ul&gt;</summary><category term="Windows 7"></category><category term="IPython Notebook"></category></entry><entry><title>Japan life tables</title><link href="http://flothesof.github.io/japan-life-tables.html" rel="alternate"></link><updated>2013-11-05T17:00:00+01:00</updated><author><name>Florian Le Bourdais</name></author><id>tag:flothesof.github.io,2013-11-05:japan-life-tables.html</id><summary type="html">&lt;p&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;
&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;
&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;I recently watched this &lt;a href="http://www.youtube.com/watch?v=qpZbu7J7UL4"&gt;Vice video on Youtube&lt;/a&gt; which is a coverage about the Japanese sex industry. Except for the fact that it looks like it was made with a message in mind that ressembles &amp;quot;the Japanese are weird&amp;quot;, it cited government surveys about the population of Japan declining. Given ...&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/p&gt;</summary><category term="Japan"></category><category term="statistics"></category></entry><entry><title>A response to falling with helium (Wolfram blog DIY)</title><link href="http://flothesof.github.io/falling-with-helium.html" rel="alternate"></link><updated>2013-10-08T09:00:00+02:00</updated><author><name>Florian Le Bourdais</name></author><id>tag:flothesof.github.io,2013-10-08:falling-with-helium.html</id><summary type="html">&lt;p&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;
&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;
&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;I'm following the explanations from this blog post: &lt;a href="http://blog.wolfram.com/2013/10/08/a-response-to-falling-with-helium/" class="uri"&gt;http://blog.wolfram.com/2013/10/08/a-response-to-falling-with-helium/&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The central question to answer is:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;how long it would be necessary for someone to fall in order to jump out of an airplane, fill a large balloon with helium while falling, and ...&lt;/p&gt;&lt;/blockquote&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/p&gt;</summary><category term="Physics"></category></entry></feed>