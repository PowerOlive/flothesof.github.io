<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Frolian's blog</title><link href="http://flothesof.github.io/" rel="alternate"></link><link href="http://flothesof.github.io/feeds/python.atom.xml" rel="self"></link><id>http://flothesof.github.io/</id><updated>2015-04-17T22:36:00+02:00</updated><entry><title>Exploring Japanese characters with principal component analysis</title><link href="http://flothesof.github.io/Japanese-characters-principal-components.html" rel="alternate"></link><updated>2015-04-17T22:36:00+02:00</updated><author><name>Florian Le Bourdais</name></author><id>tag:flothesof.github.io,2015-04-17:Japanese-characters-principal-components.html</id><summary type="html">&lt;p&gt;What if you apply a machine learning technique such as principal component analysis to the mysterious Japanese characters? Will it reveal their secret structure or just make for a fancy blogpost?&lt;/p&gt;</summary><category term="Japanese"></category><category term="Machine Learning"></category></entry><entry><title>The topology of Paris as seen by my alarm clock</title><link href="http://flothesof.github.io/bus-departure-map-Paris.html" rel="alternate"></link><updated>2015-04-04T21:07:00+02:00</updated><author><name>Florian Le Bourdais</name></author><id>tag:flothesof.github.io,2015-04-04:bus-departure-map-Paris.html</id><summary type="html">&lt;p&gt;In this post, we will use a little geography to determine the topology of Paris as seen from the point of view of my alarm clock.&lt;/p&gt;</summary><category term="Geography"></category></entry><entry><title>Animating an ancient Japanese wave pattern</title><link href="http://flothesof.github.io/Japanese-wave-pattern.html" rel="alternate"></link><updated>2015-02-27T08:47:00+01:00</updated><author><name>Florian Le Bourdais</name></author><id>tag:flothesof.github.io,2015-02-27:Japanese-wave-pattern.html</id><summary type="html">&lt;p&gt;In this post, we delve into graphical art based on an ancient Japanese wave pattern.&lt;/p&gt;</summary><category term="Waves"></category><category term="Physics"></category><category term="Animations"></category></entry><entry><title>A quantitative analysis of XKCD comic #314</title><link href="http://flothesof.github.io/xkcd-dating-pools.html" rel="alternate"></link><updated>2015-01-31T12:05:00+01:00</updated><author><name>Florian Le Bourdais</name></author><id>tag:flothesof.github.io,2015-01-31:xkcd-dating-pools.html</id><summary type="html">&lt;p&gt;Do you know XKCD? Have you ever wondered if comic #314 was actually accurate? In this post, I’ll present my analysis of this comic and show that it is indeed possible to obtain dating pool curves similar to the ones shown in the comic using Census Bureau data.&lt;/p&gt;</summary><category term="Statistics"></category><category term="XKCD"></category></entry><entry><title>Smile Recognition Using OpenCV and scikit-learn</title><link href="http://flothesof.github.io/smile-recognition.html" rel="alternate"></link><updated>2015-01-07T23:50:00+01:00</updated><author><name>Florian Le Bourdais</name></author><id>tag:flothesof.github.io,2015-01-07:smile-recognition.html</id><summary type="html">&lt;p&gt;In this post, we’re using a little of machine learning, some IPython notebook interaction and OpenCV to determine if a face found in the webcam’s frame is smiling or not.&lt;/p&gt;</summary><category term="Machine Learning"></category><category term="OpenCV"></category></entry><entry><title>A 3D model of the Paris area using the Google elevation API and OpenSCAD</title><link href="http://flothesof.github.io/Paris-3D-model-using-elevation-API-and-OpenSCAD.html" rel="alternate"></link><updated>2014-10-30T13:11:00+01:00</updated><author><name>Florian Le Bourdais</name></author><id>tag:flothesof.github.io,2014-10-30:Paris-3D-model-using-elevation-API-and-OpenSCAD.html</id><summary type="html">&lt;p&gt;In this post we use the elevation API provided by Google to obtain some height information about the Paris area and build a 3D model from the data using the OpenSCAD language. The result can be brought to the physical world using a 3D printer.&lt;/p&gt;</summary><category term="Geography"></category><category term="3D Printing"></category></entry><entry><title>Building graphs with Japanese vocabulary and kanji</title><link href="http://flothesof.github.io/Japanese-kanji-vocab-graphs.html" rel="alternate"></link><updated>2014-10-20T09:53:00+02:00</updated><author><name>Florian Le Bourdais</name></author><id>tag:flothesof.github.io,2014-10-20:Japanese-kanji-vocab-graphs.html</id><summary type="html">&lt;p&gt;This post visualizes the relationship between kanji and vocabulary data from my Japanese language learning deck using graphs.&lt;/p&gt;</summary><category term="Japanese"></category></entry><entry><title>The seven modes of Tetris</title><link href="http://flothesof.github.io/the-seven-modes-of-Tetris.html" rel="alternate"></link><updated>2014-09-17T23:55:00+02:00</updated><author><name>Florian Le Bourdais</name></author><id>tag:flothesof.github.io,2014-09-17:the-seven-modes-of-Tetris.html</id><summary type="html">&lt;p&gt;You'll never listen to Tetris in the same way again after hearing our seven church modes rendition with a Game Boy and a bowl sound.&lt;/p&gt;</summary><category term="Sound"></category><category term="Game Boy"></category></entry><entry><title>Variations on the Samsung whistle ringtone</title><link href="http://flothesof.github.io/fun-with-the-Samsung-whistle-ringtone.html" rel="alternate"></link><updated>2014-09-15T16:01:00+02:00</updated><author><name>Florian Le Bourdais</name></author><id>tag:flothesof.github.io,2014-09-15:fun-with-the-Samsung-whistle-ringtone.html</id><summary type="html">&lt;p&gt;What would you do in Korea where everyone uses the same Samsung ringtone on their smartphone if you wanted to stand out and be original? I say: butcher it, chop it to pieces and make a nice new sound out of it.&lt;/p&gt;</summary><category term="Sound"></category><category term="Music"></category></entry><entry><title>How to create a Game Boy sound in Python?</title><link href="http://flothesof.github.io/gameboy-sounds-in-python.html" rel="alternate"></link><updated>2014-09-14T09:28:00+02:00</updated><author><name>Florian Le Bourdais</name></author><id>tag:flothesof.github.io,2014-09-14:gameboy-sounds-in-python.html</id><summary type="html">&lt;p&gt;We examine hardware specs of the old school Game Boy and find ourselves enjoying 8 bit music with Python.&lt;/p&gt;</summary><category term="Gaming"></category><category term="Sound"></category><category term="Music"></category></entry></feed>